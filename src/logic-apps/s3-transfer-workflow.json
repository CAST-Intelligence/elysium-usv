{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_name": {
            "defaultValue": "s3-transfer-workflow",
            "type": "String"
        },
        "location": {
            "defaultValue": "australiaeast",
            "type": "String"
        },
        "storageName": {
            "defaultValue": "usvdatastorage",
            "type": "String"
        },
        "functionAppName": {
            "defaultValue": "usv-validation-functions",
            "type": "String"
        }
    },
    "variables": {
        "storageConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageName'), ';EndpointSuffix=core.windows.net')]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_name')]",
            "location": "[parameters('location')]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "blobName": {
                                            "type": "string"
                                        },
                                        "vesselId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Get_AWS_Credentials": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "function": {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/YOUR-RESOURCE-GROUP/providers/Microsoft.Web/sites/', parameters('functionAppName'), '/functions/AWSAuthenticationFunction')]"
                                },
                                "method": "POST",
                                "body": {
                                    "vesselId": "@triggerBody()['vesselId']",
                                    "operation": "upload"
                                }
                            }
                        },
                        "Get_blob_content": {
                            "runAfter": {
                                "Get_AWS_Credentials": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['blobName']))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Upload_to_S3": {
                            "runAfter": {
                                "Get_blob_content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "PUT",
                                "uri": "@concat('https://s3.amazonaws.com/', body('Get_AWS_Credentials')['bucket'], '/', body('Get_AWS_Credentials')['prefix'], '/', last(split(triggerBody()?['blobName'], '/')))",
                                "headers": {
                                    "x-amz-date": "@utcNow('r')",
                                    "x-amz-content-sha256": "@body('Get_AWS_Credentials')['contentHash']",
                                    "Authorization": "@body('Get_AWS_Credentials')['authHeader']"
                                },
                                "body": "@body('Get_blob_content')"
                            }
                        },
                        "Update_blob_metadata": {
                            "runAfter": {
                                "Verify_S3_upload": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "function": {
                                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/YOUR-RESOURCE-GROUP/providers/Microsoft.Web/sites/', parameters('functionAppName'), '/functions/UpdateBlobMetadata')]"
                                },
                                "method": "POST",
                                "body": {
                                    "blobName": "@triggerBody()['blobName']",
                                    "metadata": {
                                        "transferStatus": "transferred",
                                        "transferTimestamp": "@utcNow()",
                                        "s3Destination": "@concat(body('Get_AWS_Credentials')['bucket'], '/', body('Get_AWS_Credentials')['prefix'], '/', last(split(triggerBody()?['blobName'], '/')))"
                                    }
                                }
                            }
                        },
                        "Verify_S3_upload": {
                            "runAfter": {
                                "Upload_to_S3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "HEAD",
                                "uri": "@concat('https://s3.amazonaws.com/', body('Get_AWS_Credentials')['bucket'], '/', body('Get_AWS_Credentials')['prefix'], '/', last(split(triggerBody()?['blobName'], '/')))",
                                "headers": {
                                    "x-amz-date": "@utcNow('r')",
                                    "Authorization": "@body('Get_AWS_Credentials')['verifyAuthHeader']"
                                }
                            }
                        },
                        "Log_transfer": {
                            "runAfter": {
                                "Update_blob_metadata": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuretables']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Tables/@{encodeURIComponent('DataTransferLog')}/entities",
                                "body": {
                                    "PartitionKey": "@triggerBody()['vesselId']",
                                    "RowKey": "@guid()",
                                    "BlobName": "@triggerBody()['blobName']",
                                    "TransferTimestamp": "@utcNow()",
                                    "S3Destination": "@concat(body('Get_AWS_Credentials')['bucket'], '/', body('Get_AWS_Credentials')['prefix'], '/', last(split(triggerBody()?['blobName'], '/')))",
                                    "Status": "Success"
                                }
                            }
                        },
                        "Return_success_response": {
                            "runAfter": {
                                "Log_transfer": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "inputs": {
                                "statusCode": 200,
                                "body": {
                                    "status": "success",
                                    "message": "File successfully transferred to S3",
                                    "details": {
                                        "blobName": "@triggerBody()['blobName']",
                                        "s3Destination": "@concat(body('Get_AWS_Credentials')['bucket'], '/', body('Get_AWS_Credentials')['prefix'], '/', last(split(triggerBody()?['blobName'], '/')))",
                                        "transferTimestamp": "@utcNow()"
                                    }
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azureblob')]",
                                "connectionName": "azureblob",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azureblob')]"
                            },
                            "azuretables": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'azuretables')]",
                                "connectionName": "azuretables",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/azuretables')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}